/**
 * Fuse.js 简化版 - 仅用于本地搜索
 * 此文件是 Fuse.js 的一个极简实现，用于在无法连接CDN时提供基本搜索功能
 * 原版 Fuse.js: https://fusejs.io/
 */

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = global || self, global.Fuse = factory());
}(this, function () {
  'use strict';

  function Fuse(list, options) {
    this.list = list;
    this.options = Object.assign({
      keys: [],
      threshold: 0.6,
      includeScore: false,
      minMatchCharLength: 1
    }, options);
  }

  Fuse.prototype.search = function(pattern) {
    console.log('使用简化版Fuse.js搜索，结果可能不够精确');
    const results = [];
    
    if (!pattern || !this.list || !this.list.length) {
      return results;
    }
    
    const searchPattern = pattern.toLowerCase();
    
    this.list.forEach((item, index) => {
      // 对每个key搜索
      let matched = false;
      let score = 1;
      let matchedKey = null;
      
      if (typeof item === 'string') {
        // 如果列表项是字符串
        if (item.toLowerCase().includes(searchPattern)) {
          matched = true;
          score = 0.5;
          matchedKey = null;
        }
      } else {
        // 如果列表项是对象
        for (const key of this.options.keys) {
          const keyName = typeof key === 'object' ? key.name : key;
          let value = item[keyName];
          
          if (typeof value === 'string' && value.toLowerCase().includes(searchPattern)) {
            matched = true;
            score = 0.5;
            matchedKey = keyName;
            break;
          }
        }
      }
      
      if (matched) {
        const result = this.options.includeScore 
          ? { item, score, refIndex: index } 
          : { item, refIndex: index };
          
        results.push(result);
      }
    });
    
    return results;
  };

  return Fuse;
})); 